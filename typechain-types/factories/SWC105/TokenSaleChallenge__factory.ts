/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenSaleChallenge,
  TokenSaleChallengeInterface,
} from "../../SWC105/TokenSaleChallenge";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "constructor",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isComplete",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610328806100206000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806370a082311461007257806390fa17bb146100c9578063b2fa1c9e146100d3578063d96a094a14610102578063e4849b3214610122575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014f565b6040518082815260200191505060405180910390f35b6100d1610167565b005b3480156100df57600080fd5b506100e861017f565b604051808215151515815260200191505060405180910390f35b610120600480360381019080803590602001909291905050506101a8565b005b34801561012e57600080fd5b5061014d6004803603810190808035906020019092919050505061020f565b005b60006020528060005260406000206000915090505481565b670de0b6b3a76400003414151561017d57600080fd5b565b6000670de0b6b3a76400003073ffffffffffffffffffffffffffffffffffffffff163110905090565b670de0b6b3a76400008102341415156101c057600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561025c57600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000083029081150290604051600060405180830381858888f193505050501580156102f8573d6000803e3d6000fd5b50505600a165627a7a7230582042e73ad8bb5e8f70bcc8cb848e1c60461289bb02b628e24c23bea6f22f1910910029";

type TokenSaleChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenSaleChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenSaleChallenge__factory extends ContractFactory {
  constructor(...args: TokenSaleChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenSaleChallenge> {
    return super.deploy(overrides || {}) as Promise<TokenSaleChallenge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenSaleChallenge {
    return super.attach(address) as TokenSaleChallenge;
  }
  override connect(signer: Signer): TokenSaleChallenge__factory {
    return super.connect(signer) as TokenSaleChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSaleChallengeInterface {
    return new utils.Interface(_abi) as TokenSaleChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenSaleChallenge {
    return new Contract(address, _abi, signerOrProvider) as TokenSaleChallenge;
  }
}
